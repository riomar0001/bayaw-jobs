// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model applicants {
  id              String           @id @default(uuid())
  username        String           @unique
  email           String           @unique
  password        String
  first_name      String
  last_name       String
  contact_no      String
  date_of_birth   DateTime
  done_onboarding Boolean
  resume_link     String
  profile_picture String
  created_at      DateTime         @default(now())
  updated_at      DateTime         @default(now())
  job_applicants  job_applicants[]

  applicants_experience applicants_experience[]
}

model applicants_experience {
  id           String   @id @default(uuid())
  applicant_id String
  company      String
  location     String
  position     String
  worked_years String
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  applicant applicants @relation(fields: [applicant_id], references: [id])
}

model companies {
  id              String   @id @default(uuid())
  username        String   @unique
  password        String
  name            String
  address         String
  description     String
  contact_no      String
  email           String   @unique
  logo_link       String
  industry_id     String //Foreign Key
  done_onboarding Boolean
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  industry industries @relation(fields: [industry_id], references: [id])

  posted_jobs jobs[]
}

model industries {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  companies companies[]
}

model jobs {
  id            String   @id @default(uuid())
  company_id    String //Foreign Key
  title         String
  description   String
  location      String
  category      String?
  salary_from   Int?
  salary_to     Int?
  work_schedule String?
  years_exp     Int?
  is_closed     Boolean
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  company companies @relation(fields: [company_id], references: [id])

  job_applications job_applicants[]
}

model job_applicants {
  id           String   @id @default(uuid())
  job_id       String //Foreign Key
  applicant_id String //Foreign Key
  status       String
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  job       jobs       @relation(fields: [job_id], references: [id])
  applicant applicants @relation(fields: [applicant_id], references: [id])
}
